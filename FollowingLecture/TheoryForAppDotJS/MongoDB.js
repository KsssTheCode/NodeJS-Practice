/*
    MongoDB라는 회사에서 만든 데이터베이스(NoSQL) 솔루션 프로그램
    방대한 양의 데이터를 저장하는 방대한 크기의 애플리케이션을 사용하기 위해 만든 프로그램 
     - 데이터 쿼리, 저장, 상호작용 등을 아주 빠르게 처리 가능
*/

/*
    MongoDB 홈페이지에서 [Documnetation] > [MongoDB CRUD Operations]에서
    문서의 입력, 쿼리(탐색), 업데이트, 삭제 방법을 확인할 수 있음
*/

/* insertOne() ******************************************
   - 하나의 문서(객체)를 입력
   - 매개변수로 객체({})형태의 객체 입력 
   - JSON객체가 아닌 JS객체로 간주되는데, 추후에 MongoDB에서 변환함 
*********************************************************/ 
/* insertMany() *****************
   - 다수의 문서(객체)를 입력
   - 매개변수로 배열([])형태의 객체 입력 
********************************/ 
/* DB.find({속성:속성명}) **************** 
    - 단순 필터 외에도 상세 필터도 검색 가능
**************************************/
/* DB.findOne({속성:속성명}) **************** 
    - 단순 필터 외에도 상세 필터도 검색 가능
    - 하나의 문서만 검색
**************************************/
/* DB.toArray() **************** 
    - 탐색된 모든 데이터를 JS배열로 반환
**************************************/
/* DB.updateOne({변경할문서}, {업데이트할방식}) ******
    - 하나의 문서만 수정
    - 변경할 문서 ex){_id: new mongodb.ObjectId(this._id)}
    - 업데이트할방식 ex) $set: {수정사항명:수정사항내용 / 혹은 대입할객체} ($set : MongDB가 이해하는 특별한 속성)

    - updateMany도 있음. (공식홈페이지 참고)
*****************************************************/
/* DB.deleteOne({변경할문서}, {업데이트할방식}) ******
    - 하나의 문서만 삭제
    - 삭제할 문서 ex){_id: new mongodb.ObjectId(this._id)}
    - 삭제할방식 ex) $set: {삭제사항명:삭제사항내용 / 혹은 대입할객체} ($set : MongDB가 이해하는 특별한 속성)

    - deleteMany도 있음. (공식홈페이지 참고)

    - $set : setter
    - $in : 배열에 언급된 내용에 포함되는 데이터
*****************************************************/


/*
    SQL DB프로그램과 다른 점
    1. 테이블이 아닌 Collection이 존재
    2. Collection내에 Record가 아닌 Document가 존재
    3. 한 Collection내에 아무 유형의 데이터가 있어도 됨
    4. 높은 유연성 : Schemaless로 인해 컬렉션의 문서(데이터 또는 항목)이 같은 구조를 가질 필요가 없음
       (User { name: xx, email: xx, ..}과 같은 형식적인 틀에서 벗어남)
    5. 중복가능 : 다른 데이터들과 중복되는 내용이 존재
              : 데이터가 필요한 형시긍로 쿼리문을 실행하도록 만들어 필요한형식으로 저장해서 추후에 병합과정을 많이 거치디 않고도 사용가능
                => 서버의 백그라운드에서 여러 컬렉션을 합치지 않고도필요한 형시그이 데이터를 가져올 수 있음

    MongoDB의 특징
    - JSON을 통해 Collection에 데이터를 저장 (JS표현법을 사용한다고도 하지만 엄밀히 말하면 BSON을 사용)
      * BSON (Binary JSON) : JSON을 파일에 저장하기 전에 이면에서 데이터를 변형한다는 뜻 
*/